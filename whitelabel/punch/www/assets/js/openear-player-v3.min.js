/*! openear-player-v3 2017-08-08 */
angular.module("OEPlayer",["ngRoute","angular-svg-round-progress","angularMoment","templates"]).config(["$httpProvider","$routeProvider",function($httpProvider,$routeProvider){$routeProvider.when("/login",{templateUrl:"login.html",controller:"LoginCtrl"}).when("/player",{templateUrl:"player.html"}).otherwise("/login"),$httpProvider.interceptors.push("HttpErrorInterceptorModule")}]).run(["$rootScope","$location","$http","$window",function($rootScope,$location,$http,$window){$rootScope.$on("$routeChangeStart",function(event,next,current){localStorage.getItem("Authentication")?$http.defaults.headers.common.Authentication=localStorage.getItem("Authentication"):$location.path("/login")}),$rootScope.online=navigator.onLine,$window.addEventListener("offline",function(){$rootScope.$apply(function(){$rootScope.online=!1})},!1),$window.addEventListener("online",function(){$rootScope.$apply(function(){$rootScope.online=!0})},!1)}]).constant("config",{api_url:"https://api.player.openearmusic.com/v1/",module_dir:"ng",local_path:"/",file_extention:".mp3",log_path:"https://api.player.openearmusic.com/v1/log-track",version:"3.3.3"}).controller("AppCtrl",["config","$scope",function(config,$scope){$scope.version=config.version}]),angular.module("OEPlayer").controller("LogCtrl",["$scope","LogSrvc","$rootScope",function($scope,LogSrvc,$rootScope){$scope.logs=LogSrvc.logs}]),angular.module("OEPlayer").controller("LoginCtrl",["$scope","HTTPFactory","$location","$http","$rootScope","StatusSrvc",function($scope,HTTPFactory,$location,$http,$rootScope,StatusSrvc){$scope.formData={username:"",password:""};var query=$location.search();0!==Object.keys(query).length&&JSON.stringify(query)!==JSON.stringify({})?"undefined"!=typeof query.hash?HTTPFactory.loginHash({loginHash:query.hash}).success(function(data){data.authToken?($http.defaults.headers.common.Authentication=data.authToken,localStorage.setItem("Authentication",data.authToken),localStorage.setItem("lastLogin",new Date),localStorage.setItem("venue",data.venue[0].name),$location.path("/player")):$scope.message=data.error}).error(function(){localStorage.getItem("lastLogin")?$scope.checkLastLogin?$location.path("/player"):StatusSrvc.setStatus("Last login over 30 days ago. Please connect to the internet and login."):StatusSrvc.setStatus("ERR-PLY02. Player offline and no record of last login. Please check connection.")}):"undefined"!=typeof query.auth&&($http.defaults.headers.common.Authentication=query.auth,localStorage.setItem("Authentication",query.auth),localStorage.setItem("lastLogin",new Date),localStorage.setItem("venue",decodeURI(query.venue)),$location.url($location.path()),$location.path("/player")):localStorage.getItem("loginHash")?HTTPFactory.loginHash({loginHash:localStorage.getItem("loginHash")}).success(function(data){data.authToken?($http.defaults.headers.common.Authentication=data.authToken,localStorage.setItem("Authentication",data.authToken),localStorage.setItem("lastLogin",new Date),localStorage.setItem("venue",data.venue[0].name),$location.path("/player")):(localStorage.removeItem("loginHash"),$scope.message="Login hash incorrect. Use username and password.")}).error(function(){localStorage.getItem("lastLogin")?$scope.checkLastLogin?$location.path("/player"):StatusSrvc.setStatus("Last login over 30 days ago. Please connect to the internet and login."):StatusSrvc.setStatus("ERR-PLY02. Player offline and no record of last login. Please check connection.")}):localStorage.getItem("Authentication")&&($http.defaults.headers.common.Authentication=localStorage.getItem("Authentication"),$location.path("/player")),$scope.processLogin=function(){$rootScope.online?HTTPFactory.login($scope.formData).success(function(data){data.authToken?($http.defaults.headers.common.Authentication=data.authToken,localStorage.setItem("Authentication",data.authToken),localStorage.setItem("lastLogin",new Date),localStorage.setItem("venue",data.venue[0].name),$location.path("/player")):$scope.message=data.error}):localStorage.getItem("lastLogin")?$scope.checkLastLogin?$location.path("/player"):StatusSrvc.setStatus("Last login over 30 days ago. Please connect to the internet and login."):StatusSrvc.setStatus("ERR-PLY02. Player offline and no record of last login. Please check connection.")},$scope.checkLastLogin=function(){var lastLogin=new Date(localStorage.getItem("lastLogin")),today=new Date,timeDiff=Math.abs(today.getTime()-lastLogin.getTime()),diffDays=Math.ceil(timeDiff/864e5);return diffDays>90?!1:!0}}]),angular.module("OEPlayer").controller("OverlayCtrl",["$scope","$rootScope","OverlaySrvc","$element",function($scope,$rootScope,OverlaySrvc,$element){var unbindOpen=$rootScope.$on("open-overlay",function(){$scope.overlayTemplate=null,$scope.overlayTemplate="overlay-"+OverlaySrvc.type+".html",$element.addClass("active")}),unbindClose=$rootScope.$on("close-overlay",function(){$scope.overlayTemplate=null,$element.removeClass("active")});$scope.closeOverlay=function(){$scope.overlayTemplate=null,$element.removeClass("active"),$rootScope.$emit("close-overlay")},$scope.$on("$destroy",unbindOpen),$scope.$on("$destroy",unbindClose)}]).controller("OverlayQueueCtrl",["OverlaySrvc","$scope",function(OverlaySrvc,$scope){$scope.tracks=OverlaySrvc.data}]).controller("OverlayBlockedCtrl",["FileFactory","$scope","config",function(FileFactory,$scope,config){FileFactory.readJSON(config.local_path,"blocked.json").then(function(data){$scope.tracks=JSON.parse(data)})}]).controller("OverlayPlaylistCtrl",["$scope",function($scope){$scope.selectedView={name:"ptp",url:"playlists-ptp.html"},$scope.selectView=function(name,url){$scope.selectedView={name:name,url:url}}}]).controller("OverlayScheduleCtrl",["$scope",function($scope){$scope.selectedView={name:"template",url:"schedule-template.html"},$scope.selectView=function(name,url){$scope.selectedView={name:name,url:url}}}]).controller("OverlaySettingsCtrl",["$scope","SettingsSrvc","FileFactory","LogSrvc","config","HTTPFactory","$rootScope",function($scope,SettingsSrvc,FileFactory,LogSrvc,config,HTTPFactory,$rootScope){$scope.settings={},$scope.settings.crossfadeIn=SettingsSrvc.crossfadeIn/100,$scope.settings.crossfadeOut=SettingsSrvc.crossfadeOut/100,$scope.settings.skipCrossfadeOut=SettingsSrvc.skipCrossfadeOut/100,$scope.settings.onlineCheck=SettingsSrvc.onlineCheck,$scope.settings.animations=SettingsSrvc.animations,$scope.settings.pushToPlayTime=SettingsSrvc.pushToPlayTime,$scope.settings.minEnergyPlaylist=SettingsSrvc.minEnergyPlaylist,$scope.settings.languages=SettingsSrvc.lang,$scope.settings.restartTime=SettingsSrvc.restartTime,$scope.settings.fileSize=SettingsSrvc.fileSize,$scope.settings.loginHash=localStorage.getItem("loginHash")||null,$scope.settings.volume=SettingsSrvc.volume,$scope.settings.outputDevice=SettingsSrvc.outputDevice,$scope.cfTimes=[2,3,4,5,6,7,8,9,10],$scope.pushPlayLengths=[1,2,3],$scope.volumes=[1,2,3,4,5,6,7,8,9,10],$scope.restartTimes=[{time:4,display:"4.00am"},{time:4.3,display:"4.30am"},{time:5,display:"5.00am"},{time:5.3,display:"5.30am"}],$scope.onlineCheck=[{type:1,name:"Standard"},{type:2,name:"Alternative"}],$scope.fileSizes=[{type:1,display:"Small"},{type:2,display:"Standard"}],$scope.minEnergyPlaylist=[30,40,50,60,70,80,90],$scope.languages=["English","Spanish","Portuguese"],$scope.version=config.version,$scope.outputDevices=[];var formatBytes=function(bytes,decimals){if(0===bytes)return"0 Byte";var k=1024,dm=decimals+1||3,sizes=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(dm))+" "+sizes[i]};FileFactory.getAvailableSpace().then(function(res){$scope.available=formatBytes(res[1]-res[0])},function(err){console.log(err)}),$scope.noTracks=0,FileFactory.readDirectory("").then(function(data){if(data.length>0)for(var i=data.length-1;i>=0;i--)-1==data[i].name.indexOf(".json")&&$scope.noTracks++}),navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then(function(){return navigator.mediaDevices.enumerateDevices()}).then(function(devices){for(var i=devices.length-1;i>=0;i--)"audiooutput"===devices[i].kind&&$scope.outputDevices.push(devices[i])})["catch"](function(err){alert("Error getting output devices.")}),$scope.changeOutputDevice=function(){var c=confirm("This will restart the player. OK?");c&&(SettingsSrvc.setSetting("outputDevice",$scope.settings.outputDevice),window.location.reload())},$scope.changeSetting=function(setting){if("crossfadeIn"==setting||"crossfadeOut"==setting||"skipCrossfadeOut"==setting)SettingsSrvc.setSetting(setting,100*$scope.settings[setting]);else if("languages"==setting){var c=confirm($scope.lang.settings.changeLang);c&&(SettingsSrvc.setSetting(setting,$scope.settings[setting]),window.location.reload())}else SettingsSrvc.setSetting(setting,$scope.settings[setting])},$scope.saveLoginHash=function(){if($scope.settings.loginHash){var c=confirm("This will restart the player. OK?");c&&(localStorage.removeItem("Authentication"),localStorage.setItem("loginHash",$scope.settings.loginHash),window.location.reload())}else alert("No hash set")},$scope.clearLoginHash=function(){$scope.settings.loginHash=null,localStorage.removeItem("loginHash")},$scope.deleteLibrary=function(){var c=confirm($scope.lang.settings.conflibdel);c&&FileFactory.readDirectory("").then(function(data){for(var i=data.length-1;i>=0;i--)FileFactory.deleteFile("",data[i].name).then(function(res){LogSrvc.logSystem(res)});window.location.reload()})},$scope.deleteJson=function(){var c=confirm($scope.lang.settings.confstored);c&&(localStorage.removeItem("backlog"),FileFactory.readDirectory("").then(function(data){for(var i=data.length-1;i>=0;i--)-1!==data[i].name.indexOf(".json")&&FileFactory.deleteFile("",data[i].name).then(function(res){LogSrvc.logSystem(res)});window.location.reload()}))},$scope.changeFileSize=function(){var c=confirm("This will delete the library and redownload the tracks. Are you sure?");c&&(SettingsSrvc.setSetting("fileSize",$scope.settings.fileSize),FileFactory.readDirectory("").then(function(data){for(var i=data.length-1;i>=0;i--)FileFactory.deleteFile("",data[i].name).then(function(res){LogSrvc.logSystem(res)});var dt={fileSize:$scope.settings.fileSize};HTTPFactory.setSettings(dt).success(function(data){window.location.reload()}).error(function(err){LogSrvc.logError(err)})}))},$scope.changeVolume=function(){SettingsSrvc.setSetting("volume",$scope.settings.volume),$rootScope.$emit("volume-change")}}]).controller("OverlayLibraryPlaylistsCtrl",["$scope","FileFactory","config","PlayerSrvc","$rootScope",function($scope,FileFactory,config,PlayerSrvc,$rootScope){$scope.init=function(){FileFactory.readJSON(config.local_path,"playlists.json").then(function(data){$scope.playlists=JSON.parse(data)})},$scope.init(),$scope.playPlaylist=function(playlist){PlayerSrvc.pushToPlay(playlist),$scope.closeOverlay()}}]).controller("OverlayLibraryPlaylistsTimeCtrl",["$scope","FileFactory","config","PlayerSrvc","$rootScope",function($scope,FileFactory,config,PlayerSrvc,$rootScope){$scope.init=function(){FileFactory.readJSON(config.local_path,"schedule-time.json").then(function(data){$scope.playlists=JSON.parse(data)})},$scope.init(),$scope.playSchedule=function(){PlayerSrvc.ptpSchedule($scope.playlists),$scope.closeOverlay()}}]).controller("OverlayScheduleTemplateCtrl",["HTTPFactory","$scope","LogSrvc","FileFactory","config",function(HTTPFactory,$scope,LogSrvc,FileFactory,config){$scope.init=function(){$scope.schedules=[{day:$scope.lang.schedule.days.mon,schedule:[]},{day:$scope.lang.schedule.days.tue,schedule:[]},{day:$scope.lang.schedule.days.wed,schedule:[]},{day:$scope.lang.schedule.days.thur,schedule:[]},{day:$scope.lang.schedule.days.fri,schedule:[]},{day:$scope.lang.schedule.days.sat,schedule:[]},{day:$scope.lang.schedule.days.sun,schedule:[]}],FileFactory.readJSON(config.local_path,"template.json").then(function(data){$scope.venue=JSON.parse(data),angular.forEach($scope.venue.schedule_template,function(value){var index;angular.forEach($scope.venue.playlists,function(playlist,playlistIndex){playlist.id==value.pivot.playlist_id&&(index=playlistIndex)});var start=new Date("January 1, 2014 "+value.pivot.start),end=new Date("January 1, 2014 "+value.pivot.end),schedule={start:start,end:end,midnight_overlap:value.pivot.midnight_overlap,id:value.pivot.id,playlist:$scope.venue.playlists[index]};$scope.schedules[value.pivot.day].schedule.push(schedule)})})},$scope.init(),$scope.calType=1,$scope.checkMidnight=function(){var start=moment($scope.schedule.start),end=moment($scope.schedule.end);"undefined"==typeof $scope.schedule.midnight_overlap&&(end.hours()<=4&&start.hours()<=23&&start.hours()>4?$scope.schedule.midnight_overlap=1:$scope.schedule.midnight_overlap=0)},$scope.times=[];for(var st=4,nd=23,i=st;nd>=i;i++)$scope.times.push(i);$scope.times.push("00");for(var stm=1,ndm=4,j=stm;ndm>=j;j++)$scope.times.push(j)}]).controller("OverlayScheduleCalendarCtrl",["HTTPFactory","$scope",function(HTTPFactory,$scope){$scope.times=[];for(var st=4,nd=23,i=st;nd>=i;i++)$scope.times.push(i);$scope.times.push("00");for(var stm=1,ndm=4,j=stm;ndm>=j;j++)$scope.times.push(j);$scope.init=function(){$scope.schedules=[{day:"Monday",schedule:[]},{day:"Tuesday",schedule:[]},{day:"Wednesday",schedule:[]},{day:"Thursday",schedule:[]},{day:"Friday",schedule:[]},{day:"Saturday",schedule:[]},{day:"Sunday",schedule:[]}],$scope.scheduleTemplate=[{day:"Monday",schedule:[]},{day:"Tuesday",schedule:[]},{day:"Wednesday",schedule:[]},{day:"Thursday",schedule:[]},{day:"Friday",schedule:[]},{day:"Saturday",schedule:[]},{day:"Sunday",schedule:[]}],$scope.getHeaderDates(),HTTPFactory.getVenueCalendar($scope.weekStart.format("YYYY-MM-DD")).success(function(data){$scope.venue=data,angular.forEach($scope.venue.schedule_template,function(value){var index;angular.forEach($scope.venue.playlists,function(playlist,playlistIndex){playlist.id==value.pivot.playlist_id&&(index=playlistIndex)});var start=new Date("January 1, 2014 "+value.pivot.start),end=new Date("January 1, 2014 "+value.pivot.end),schedule={start:start,end:end,midnight_overlap:value.pivot.midnight_overlap,id:value.pivot.id,playlist:$scope.venue.playlists[index]};$scope.scheduleTemplate[value.pivot.day].schedule.push(schedule)}),angular.forEach($scope.venue.schedule_calendar,function(value){var index;angular.forEach($scope.venue.playlists,function(playlist,playlistIndex){playlist.id==value.pivot.playlist_id&&(index=playlistIndex)});var start=new Date("January 1, 2014 "+value.pivot.start),end=new Date("January 1, 2014 "+value.pivot.end),schedule={start:start,end:end,midnight_overlap:value.pivot.midnight_overlap,id:value.pivot.id,date:value.pivot.date,playlist:$scope.venue.playlists[index]};$scope.schedules[value.pivot.day].schedule.push(schedule)})})},$scope.today=moment(),$scope.weekStart=moment().startOf("isoWeek"),$scope.getHeaderDates=function(change){var i=1;angular.forEach($scope.schedules,function(value){value.date=moment($scope.weekStart).startOf("isoWeek").isoWeekday(i),value.active=!1,$scope.today.format("YYYY MM DD")==value.date.format("YYYY MM DD")&&(value.active=!0),i++})},$scope.getHeaderDates(),$scope.calForward=function(){$scope.weekStart=moment($scope.weekStart).add(7,"days"),$scope.getHeaderDates(),$scope.init()},$scope.calBack=function(){$scope.weekStart=moment($scope.weekStart).add(-7,"days"),$scope.getHeaderDates(),$scope.init()},$scope.selectDate=function(){$scope.weekStart=moment($scope.datepicker).startOf("isoWeek"),$scope.getHeaderDates(),$scope.init()},$scope.checkMidnight=function(){var start=moment($scope.schedule.start),end=moment($scope.schedule.end);"undefined"==typeof $scope.schedule.midnight_overlap&&(end.hours()<=4&&start.hours()<=23&&start.hours()>4?$scope.schedule.midnight_overlap=1:$scope.schedule.midnight_overlap=0)},$scope.init()}]),angular.module("OEPlayer").controller("PlayerCtrl",["$scope","FileFactory","LogSrvc","HTTPFactory","config","StatusSrvc","$element","$rootScope","OverlaySrvc","PlayerSrvc","SettingsSrvc","$q","$timeout","$location","$interval","$http","MediaFactory","LangFactory","SocketFactory",function($scope,FileFactory,LogSrvc,HTTPFactory,config,StatusSrvc,$element,$rootScope,OverlaySrvc,PlayerSrvc,SettingsSrvc,$q,$timeout,$location,$interval,$http,MediaFactory,LangFactory,SocketFactory){$scope.lang=LangFactory,$scope.menu=[{name:"playlists",display:$scope.lang.menu.playlists,icon:"folder"},{name:"queue",display:$scope.lang.menu.queue,icon:"list-thumbnails"},{name:"schedule",display:$scope.lang.menu.schedule,icon:"calendar"},{name:"settings",display:$scope.lang.menu.settings,icon:"widget"}];var player,socket,pushToPlayTimer;$scope.initialising=!1,$scope.playbackErr=0;var init=function(){player={},LogSrvc.logSystem("init called"),$scope.status=StatusSrvc,$rootScope.ready=!1,$scope.player={lastPlayed:[],currentIndex:0,online:!0,venueName:localStorage.getItem("venue"),volume:SettingsSrvc.volume,hasSchedule:!1,isDownloading:!1},StatusSrvc.setStatus("Loading "+$scope.player.venueName+"..."),$scope.unavailableTracks=[],$scope.availableTracks=[],$scope.processingTracks=[],$scope.playlist={tracks:[]},$scope.currentTrack={},$scope.currentTrack.playerName="playerOne",$scope.pushToPlay={status:!1},$scope.timer={},$scope.pushToPlaySchedule={status:!1},$scope.energy={status:!1,level:5},$scope.player.online=$rootScope.online;var arrRestartTime=SettingsSrvc.restartTime.toString().split("."),restartTime={hour:parseInt(arrRestartTime[0]),min:arrRestartTime.length>1?10*parseInt(arrRestartTime[1]):0},mtStart=function(){var nowToday=new Date,millisTillFourAM=new Date(nowToday.getFullYear(),nowToday.getMonth(),nowToday.getDate()+1,restartTime.hour,restartTime.min,0,0)-nowToday;0>millisTillFourAM&&(millisTillFourAM+=864e5);var mtTimerStart=function(){var mtTimer=$timeout(function(){$timeout.cancel(mtTimer),mtTimer=void 0,LogSrvc.logSystem(restartTime.hour+":"+restartTime.min+"am restart"),window.location.reload()},millisTillFourAM)};mtTimerStart()};mtStart(),$scope.initialising||(socket=new SocketFactory("wss://openear-ws.herokuapp.com")),$scope.$on("socket:open",function(event,data){socket.send("playerInit",{volume:SettingsSrvc.volume})}),$scope.$on("socket:closed",function(event,data){socket=new SocketFactory("wss://openear-ws.herokuapp.com")}),$scope.$on("socket:message",function(event,data){var auth=localStorage.getItem("Authentication");if(data.token===auth)switch(data.event){case"manReady":!$scope.swappingTracks&&$rootScope.ready&&socket.send("ready",null);break;case"skipForward":$scope.swappingTracks||($scope.skipForward(),LogSrvc.logSystem("man app - skipForward"));break;case"skipBack":$scope.swappingTracks||($scope.skipBack(),LogSrvc.logSystem("man app - skipBack"));break;case"playPause":$scope.swappingTracks||($scope.playPause(),LogSrvc.logSystem("man app - playPause"));break;case"restartPlayer":$scope.swappingTracks||($scope.restart(),LogSrvc.logSystem("man app - restart"));break;case"pushToPlayID":if(!$scope.swappingTracks){LogSrvc.logSystem("man app - pushToPlay");var playlistID=data.data;$interval.cancel(player[$scope.currentTrack.playerName].timer),player[$scope.currentTrack.playerName].timer=void 0,crossfade($scope.currentTrack.playerName,SettingsSrvc.crossfadeIn,"out",!0).then(function(){$scope.pushToPlay={status:!0,end:getEndTime(SettingsSrvc.pushToPlayTime)},FileFactory.readJSON(config.local_path,"playlists.json").then(function(data){for(var playlists=JSON.parse(data),i=playlists.length-1;i>=0;i--)playlists[i].id==playlistID&&(LogSrvc.logSystem("push-to-play man"),$scope.playlist=playlists[i],$scope.playlist.end=getEndTime(SettingsSrvc.pushToPlayTime),socket.send("currentPlaylist",{name:$scope.playlist.name,ends:$scope.playlist.end,pushToPlay:!0}),shuffleArray($scope.playlist.tracks),$scope.player.currentIndex=0,prepareNextTrack($scope.currentTrack.playerName),startPtpTimer())})})}break;case"cancelPushToPlay":$scope.pushToPlay.status=!1,$timeout.cancel(pushToPlayTimer),pushToPlayTimer=void 0,LogSrvc.logSystem("man app - push-to-play timer end");break;case"volume":SettingsSrvc.setSetting("volume",data.data),changeVolume(data.data)}else LogSrvc.logSystem("Not authenticated")}),FileFactory.init().then(function(res){LogSrvc.logSystem(res),getSetttings()},function(error){LogSrvc.logError("error initialising")})},changeVolume=function(volume){$scope.player.volume=volume,player[$scope.currentTrack.playerName].setVolume(volume/10,$scope.currentTrack.playerName)};$scope.$watch("online",function(newStatus){$scope.player.online=newStatus});var getSetttings=function(){HTTPFactory.getSettings().success(function(data){data.file_size!==SettingsSrvc.fileSize&&(SettingsSrvc.setSetting("fileSize",data.file_size),FileFactory.readDirectory("").then(function(data){for(var i=data.length-1;i>=0;i--)FileFactory.deleteFile("",data[i].name).then(function(res){LogSrvc.logSystem(res)});window.location.reload()})),1==SettingsSrvc.animations?$element.addClass("animations"):$element.removeClass("animations"),$scope.player.online?processBacklog():getTracksOffline()}).error(function(err){LogSrvc.logError("http err getting settings - going offline"),getTracksOffline()})},processBacklog=function(){var backlog=JSON.parse(localStorage.getItem("backlog"));backlog?HTTPFactory.logTrack({logs:backlog}).success(function(){localStorage.removeItem("backlog"),getPlaylists()}).error(function(err){LogSrvc.logError("err processing backlog"),getTracksOffline()}):getPlaylists()},writeJSONFiles=function(file,data,callback){StatusSrvc.setStatus("Loading "+file+"..."),FileFactory.checkFile("",file+".json").then(function(success){FileFactory.deleteFile("",file+".json").then(function(){LogSrvc.logSystem("got "+file+" delete"),FileFactory.writeJSON(config.local_path,file+".json",data,!0).then(function(){LogSrvc.logSystem("saved "+file),StatusSrvc.setStatus("Saved "+file),callback()})},function(){StatusSrvc.setStatus(file+" creation error. Please go to settings and delete stored data.")})},function(err){FileFactory.writeJSON(config.local_path,file+".json",data,!0).then(function(){LogSrvc.logSystem("got "+file+" no delete"),StatusSrvc.setStatus("Got "+file),callback()})})},getPlaylists=function(){HTTPFactory.getPlaylists().success(function(data){data.length>0?writeJSONFiles("playlists",data,getTracksOnline):StatusSrvc.setStatus("No playlists. Please add some playlists to continue.")}).error(function(err){LogSrvc.logError(err),getTracksOffline()})},getTracksOnline=function(){HTTPFactory.getTracks().success(function(data){data.tracks.length>0?writeJSONFiles("tracks",data,getScheduleTemplate):StatusSrvc.setStatus("No tracks associated with playlists. Please add music to your playlists.")}).error(function(err){LogSrvc.logError(err),getTracksOffline()})},getScheduleTemplate=function(){HTTPFactory.getScheduleTemplate().success(function(data){writeJSONFiles("template",data,getSchedule)}).error(function(err){LogSrvc.logError(err),getTracksOffline()})},getSchedule=function(){HTTPFactory.getSchedule().success(function(data){writeJSONFiles("schedule",data,getBlocked)}).error(function(err){LogSrvc.logError(err),getTracksOffline()})},getBlocked=function(){HTTPFactory.getBlocked().success(function(data){writeJSONFiles("blocked",data,getScheduleTime)}).error(function(err){LogSrvc.logError(err),getTracksOffline()})},getScheduleTime=function(){HTTPFactory.getScheduleTime().success(function(data){writeJSONFiles("schedule-time",data,getTracks)}).error(function(err){LogSrvc.logError(err),getTracksOffline()})},getTracks=function(){StatusSrvc.setStatus("Checking library status.");var tracksLocal=[];FileFactory.readDirectory("").then(function(data){if(LogSrvc.logSystem("got local tracks"),data.length>0)for(var i=data.length-1;i>=0;i--)-1==data[i].name.indexOf(".json")&&tracksLocal.push(data[i].name);LogSrvc.logSystem("tracks local count = "+tracksLocal.length),angular.forEach(tracksLocal,function(track,index){FileFactory.getMetadata("",track).then(function(res){res.size<2e3&&FileFactory.deleteFile("",track).then(function(res){tracksLocal.splice(index,1),LogSrvc.logError("track metadata warning - track deleted")})})}),HTTPFactory.getTracks().success(function(data){var tracksServer=data.tracks;LogSrvc.logSystem("tracks server count = "+tracksServer.length);for(var i=tracksServer.length-1;i>=0;i--)for(var j=tracksLocal.length-1;j>=0;j--)tracksLocal[j].replace(".mp3","")==tracksServer[i].id&&($scope.availableTracks.push(tracksServer[i]),tracksLocal.splice(j,1));if(tracksLocal.length>0){LogSrvc.logSystem("delete local tracks length = "+tracksLocal.length);for(var k=tracksLocal.length-1;k>=0;k--)FileFactory.deleteFile("",tracksLocal[k]).then(function(res){LogSrvc.logSystem(res)})}for(var l=$scope.availableTracks.length-1;l>=0;l--)for(var m=tracksServer.length-1;m>=0;m--)$scope.availableTracks[l].id==tracksServer[m].id&&tracksServer.splice(m,1);$scope.unavailableTracks=tracksServer,$scope.tracksNeeded=tracksServer.length,$scope.unavailableTracks.length>0?(StatusSrvc.setStatus("Remaining: "+$scope.unavailableTracks.length+" of "+$scope.tracksNeeded+" tracks"),prepareDownload()):($scope.swappingTracks=!0,preparePlaylist())}).error(function(err){LogSrvc.logError("http err getting tracks - going offline"),getTracksOffline()})},function(error){LogSrvc.logError("err reading tracks filesystem"),getTracks()})},getTracksOffline=function(){LogSrvc.logSystem("Playing offline"),FileFactory.readJSON(config.local_path,"tracks.json").then(function(data){var d=JSON.parse(data);$scope.availableTracks=d.tracks,$scope.swappingTracks=!0,preparePlaylist()},function(error){LogSrvc.logError("error reading tracks offline - stopped")})},prepareDownload=function(){$scope.swappingTracks=!0,FileFactory.readJSON(config.local_path,"schedule.json").then(function(data){var schedule=JSON.parse(data);if(0===schedule.code)downloadTrack($scope.unavailableTracks[0]);else{foundPlaylist=!1;for(var i=0;i<schedule.playlists.length;i++)if(checkPlaylistStart(schedule.playlists[i])){foundPlaylist=i;break}foundPlaylist!==!1?getPlaylistTracks(schedule.playlists[foundPlaylist]).then(function(data){var currentPlaylist=data,unavailableTracks=angular.copy($scope.unavailableTracks);$scope.unavailableTracks=[],angular.forEach(unavailableTracks,function(unavailable,index){angular.forEach(currentPlaylist,function(current){unavailable.id==current.id&&($scope.unavailableTracks.push(current),unavailableTracks.splice(index,1))})}),$scope.unavailableTracks.push.apply($scope.unavailableTracks,unavailableTracks),downloadTrack($scope.unavailableTracks[0])}):downloadTrack($scope.unavailableTracks[0])}})},isDownloading=function(isDownloading,msg){socket.send("downloading",{isDownloading:isDownloading,msg:msg}),$scope.player.isDownloading=isDownloading},downloadTrack=function(track){var src={};src=1===SettingsSrvc.fileSize?{endpoint:"getTrackSrcSmall",type:"file_small"}:{endpoint:"getTrackSrc",type:"file_ios"},FileFactory.getAvailableSpace().then(function(res){var left=((res[1]-res[0])/1048576).toFixed(2);if(left>100)HTTPFactory[src.endpoint](track.id).success(function(trk){HTTPFactory.getTrackFile(trk[src.type].filename.src).success(function(data){LogSrvc.logSystem("download complete"),FileFactory.writeTrack(config.local_path,track.id+".mp3",data,!0).then(function(res){LogSrvc.logSystem("write track complete"),$scope.availableTracks.push(track),$scope.unavailableTracks.length<.9*$scope.tracksNeeded&&!$scope.playing?($scope.playing=!0,preparePlaylist(!1,!0)):1!==$scope.unavailableTracks.length||$scope.playing||($scope.playing=!0,preparePlaylist(!1,!0)),getNextTrack(track)},function(error){LogSrvc.logError("write download track error"),$scope.unavailableTracks.push(track),getNextTrack(track)})}).error(function(err){LogSrvc.logError("download track error"),$scope.unavailableTracks.push(track),getNextTrack(track)})}).error(function(){LogSrvc.logError("get track error"),$scope.unavailableTracks.push(track),getNextTrack(track)});else{"undefined"!=typeof player.playerOne&&player.playerOne.stop("playerOne"),"undefined"!=typeof player.playerTwo&&player.playerTwo.stop("playerTwo"),StatusSrvc.setStatus("Storage full. Please contact OpenEar on 0141 248 6006.");var c=confirm("You have run out of storage space on the player. You can either remove some playlists or convert your library to small files. Press OK to convert to small files.");c?(SettingsSrvc.setSetting("fileSize",1),FileFactory.readDirectory("").then(function(data){for(var i=data.length-1;i>=0;i--)FileFactory.deleteFile("",data[i].name).then(function(res){LogSrvc.logSystem(res)});var dt={fileSize:1};HTTPFactory.setSettings(dt).success(function(data){window.location.reload()}).error(function(err){LogSrvc.logError("http err getting settings - stopped")})})):$scope.swappingTracks=!1}},function(err){console.log(err)})},getNextTrack=function(track){$scope.unavailableTracks.splice(0,1);var msg="Remaining: "+$scope.unavailableTracks.length+" of "+$scope.tracksNeeded+" tracks. Playback may be unstable. Controls disabled.";StatusSrvc.setStatus(msg),$scope.unavailableTracks.length>0?(isDownloading(!0,msg),$scope.swappingTracks=!0,downloadTrack($scope.unavailableTracks[0])):($scope.swappingTracks=!1,StatusSrvc.clearStatus(),isDownloading(!1,null))},checkPlaylistStart=function(playlist){var now=moment(),time=getTime();return playlist.day==(0===now.weekday()?6:now.weekday()-1)?1==playlist.midnight_overlap&&playlist.start<=time&&"23:59:59">time?!0:playlist.start<=time&&playlist.end>=time?!0:!1:1==playlist.midnight_overlap&&"03:59:59">time?playlist.day==(0===now.weekday()?5:now.weekday()-2)&&playlist.end>=time?!0:!1:void 0},getPlaylistTracks=function(playlist){var deferred=$q.defer();return FileFactory.readJSON(config.local_path,"playlists.json").then(function(data){for(var playlists=JSON.parse(data),i=0;i<playlists.length;i++)if(playlists[i].id==playlist.playlist_id){deferred.resolve(playlists[i].tracks);break}deferred.reject()}),deferred.promise},removeBlockedTracks=function(playlist){FileFactory.readJSON(config.local_path,"blocked.json").then(function(data){var blocked=JSON.parse(data);if(blocked.length>0)for(var i=blocked.length-1;i>=0;i--)for(var j=playlist.tracks.length-1;j>=0;j--)blocked[i].track_id==playlist.tracks[j].id&&playlist.tracks.splice(j,1)})},preparePlaylist=function(fromSlider,downloading){StatusSrvc.setStatus("Getting playlist..."),$scope.player.currentIndex=0,$scope.playlist={},FileFactory.readJSON(config.local_path,"schedule.json").then(function(data){LogSrvc.logSystem("getting current playlist");var schedule=JSON.parse(data);if(0===schedule.code)$scope.player.hasSchedule=!1,$rootScope.ready=!0,LogSrvc.logSystem("no schedule - music library"),socket.send("currentPlaylist",{name:"Music Library"}),$scope.playlist.name="Music Library",$scope.playlist.tracks=$scope.availableTracks,removeBlockedTracks($scope.playlist),downloading||shuffleArray($scope.playlist.tracks),StatusSrvc.clearStatus(),fromSlider||loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex]);else{$scope.player.hasSchedule=!0,foundPlaylist=!1;for(var i=0;i<schedule.playlists.length;i++)if(checkPlaylistStart(schedule.playlists[i])){foundPlaylist=i;break}$rootScope.ready=!0,foundPlaylist!==!1?(LogSrvc.logSystem("got playlist"),getPlaylistTracks(schedule.playlists[foundPlaylist]).then(function(data){if($scope.playlist=schedule.playlists[i].playlist,socket.send("currentPlaylist",{name:$scope.playlist.name,ends:$scope.playlist.end,pushToPlay:$scope.pushToPlay.status}),$scope.playlist.tracks=data,removeBlockedTracks($scope.playlist),downloading){var playlistTracks=angular.copy($scope.playlist.tracks);$scope.playlist.tracks=[];var promise=$q.all(null);angular.forEach(playlistTracks,function(track,index){promise=FileFactory.checkFile("",track.id+".mp3").then(function(data){$scope.playlist.tracks.push(track),playlistTracks.splice(index,1)},function(err){console.log(err)})}),promise.then(function(){shuffleArray($scope.playlist.tracks),$scope.playlist.tracks.push.apply($scope.playlist.tracks,playlistTracks),
loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex])})}else shuffleArray($scope.playlist.tracks),schedule.playlists[foundPlaylist].interleave&&!fromSlider?getPlaylistTracks(schedule.playlists[foundPlaylist].interleave).then(function(data){var interleave=shuffleArray(data);i=0,angular.forEach($scope.playlist.tracks,function(track){i%schedule.playlists[foundPlaylist].interleave.ratio===0&&($scope.playlist.tracks.splice(i,0,interleave[0]),interleave.splice(0,1)),i++}),$scope.playlist.name+=" WITH "+schedule.playlists[foundPlaylist].interleave.playlist.name+" - 1 in "+schedule.playlists[foundPlaylist].interleave.ratio+" Interleave",loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex])},function(error){LogSrvc.logError("no interleave playlist - loading normal playlist"),loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex])}):fromSlider||loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex]);StatusSrvc.clearStatus()},function(error){LogSrvc.logError("error reading playlist file - preparePlaylist")})):(LogSrvc.logSystem("no playlist - music library"),$scope.playlist.name="Music Library",socket.send("currentPlaylist",{name:"Music Library"}),$scope.playlist.tracks=$scope.availableTracks,removeBlockedTracks($scope.playlist),downloading||shuffleArray($scope.playlist.tracks),StatusSrvc.clearStatus(),fromSlider||loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex]))}},function(error){LogSrvc.logSystem(error)})},energisePlaylist=function(){$scope.playlist.name="Energy set at "+$scope.energy.level,$scope.player.currentIndex=0,$scope.playlist.tracks=[];var energy=parseInt($scope.energy.level);$scope.energy.increment=energy+1,$scope.energy.decrement=energy-1,fillEnergyPlaylist(energy,!0),removeBlockedTracks($scope.playlist),shuffleArray($scope.playlist.tracks)},fillEnergyPlaylist=function(energy,direction){for(var i=0;i<$scope.availableTracks.length;i++)$scope.availableTracks[i].energy==energy&&$scope.playlist.tracks.push($scope.availableTracks[i]);$scope.playlist.tracks.length<SettingsSrvc.minEnergyPlaylist&&($scope.energy.increment>10?direction=!1:$scope.energy.decrement<0&&(direction=!0),fillEnergyPlaylist(direction?$scope.energy.increment++:$scope.energy.decrement--,!direction))},checkPtpSchedule=function(playlist){var now=new Date,arrTime=playlist.pivot.end.split(":"),diff=60*arrTime[0]*6e4+6e4*arrTime[1];return now.getTime()-$scope.pushToPlaySchedule.start.getTime()>diff?!1:!0},startNextPtpSchedule=function(){$scope.pushToPlaySchedule.playlistIndex<$scope.pushToPlaySchedule.schedule.length-1?(console.log("new ptp schedule"),$scope.pushToPlaySchedule.playlistIndex++,$scope.playlist=$scope.pushToPlaySchedule.schedule[$scope.pushToPlaySchedule.playlistIndex],$scope.playlist.playlist_id=$scope.playlist.id,getPlaylistTracks($scope.playlist).then(function(tracks){$scope.playlist.tracks=tracks,shuffleArray($scope.playlist.tracks),$scope.player.currentIndex=0,$interval.cancel($scope.pushToPlaySchedule.timer),$scope.pushToPlaySchedule.timer=void 0,startPtpTimerSchedule(),loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex])})):($scope.pushToPlaySchedule.status=!1,$interval.cancel($scope.pushToPlaySchedule.timer),$scope.pushToPlaySchedule.timer=void 0,preparePlaylist())},prepareNextTrack=function(lastPlayer){$scope.currentTrack.playerName=getNextPlayerName(lastPlayer),$scope.pushToPlaySchedule.status?checkPtpSchedule($scope.playlist)?($scope.player.currentIndex>=$scope.playlist.tracks.length-1?$scope.player.currentIndex=0:$scope.player.currentIndex++,loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex])):startNextPtpSchedule():checkPlaylistStart($scope.playlist)||$scope.pushToPlay.status||$scope.energy.status||!$scope.player.hasSchedule?($scope.player.currentIndex>=$scope.playlist.tracks.length-1?$scope.player.currentIndex=0:$scope.player.currentIndex++,loadTrack($scope.currentTrack.playerName,$scope.playlist.tracks[$scope.player.currentIndex])):preparePlaylist()},logTrack=function(track){if($scope.player.online)HTTPFactory.logTrack({logs:[track.id]}).success(function(){LogSrvc.logSystem("Track "+track.title+" logged")}).error(function(err){LogSrvc.logError("http err logging track - logTrack 1");var backlog=JSON.parse(localStorage.getItem("backlog"));backlog?backlog.push(track.id):backlog=[track.id],localStorage.setItem("backlog",JSON.stringify(backlog))});else{var backlog=JSON.parse(localStorage.getItem("backlog"));backlog?backlog.push(track.id):backlog=[track.id],localStorage.setItem("backlog",JSON.stringify(backlog))}},loadTrack=function(playerName,track){try{socket.send("currentTrack",{title:track.title,artist:track.artist}),$scope.initialising=!1,LogSrvc.logSystem("playing "+track.title+" id="+track.id+" player name "+playerName),$scope.currentTrack=track,$scope.currentTrack.playerName=playerName;$scope.timer={elapsed:"0:00",duration:"0:00"};var src=track.id+config.file_extention;player[playerName]=new MediaFactory(playerName),player[playerName].init(src).then(function(){if(player[playerName].setVolume(0,playerName),player[playerName].play(),crossfade(playerName,SettingsSrvc.crossfadeIn,"in",!0).then(function(){$scope.swappingTracks=!1,socket.send("ready",null)}),!$scope.initialising)var checkTimeout=$timeout(function(){var checkPlaying=function(){var position=player[playerName].getCurrentPosition(playerName);1>position?($scope.playbackErr++,LogSrvc.logError("playback error count check playing - "+$scope.playbackErr),$scope.playbackErr>5?(LogSrvc.logError("playback error check playing - Restarting"),window.location.reload()):cancelTimer(playerName)):(logTrack($scope.currentTrack),LogSrvc.logSystem("track "+$scope.currentTrack.title+" playing")),$timeout.cancel(checkTimeout)};checkPlaying()},11*SettingsSrvc.crossfadeIn);startTimer(playerName)},function(error){$scope.playbackErr++,LogSrvc.logError("error loading track - no."+$scope.playbackErr),$scope.playbackErr>5?(LogSrvc.logError("playback error loading - Restarting"),window.location.reload()):cancelTimer(playerName)})}catch(e){$scope.playbackErr++,LogSrvc.logError("playback error catch no."+$scope.playbackErr),$scope.playbackErr>5?(LogSrvc.logError("playback error catch - Restarting"),window.location.reload()):cancelTimer(playerName)}},cancelTimer=function(playerName){player[playerName].stop(playerName),$interval.cancel(player[playerName].timer),player[playerName].timer=void 0,prepareNextTrack(playerName)},startTimer=function(playerName){player[playerName].timer=$interval(function(){var getElapsed=function(){var position=player[playerName].getCurrentPosition(playerName);position>-1&&($scope.timer.durationSec=parseInt(player[playerName].getDuration(playerName)),$scope.timer.duration=getSecMin(parseInt($scope.timer.durationSec%60),parseInt($scope.timer.durationSec/60%60)),$scope.timer.elapsedSec=parseInt(position),$scope.timer.elapsed=getSecMin(parseInt(position%60),parseInt(position/60%60)),parseInt(position)+10>$scope.timer.durationSec&&$scope.timer.durationSec>0&&($interval.cancel(player[playerName].timer),player[playerName].timer=void 0,LogSrvc.logSystem("next track"),$scope.swappingTracks=!0,crossfade(playerName,SettingsSrvc.crossfadeIn,"out",!1).then(function(){addToLastPlayed($scope.currentTrack),prepareNextTrack(playerName)})))};getElapsed()},1e3)},crossfade=function(playerName,time,direction,wait,pause){var deferred=$q.defer();SettingsSrvc.volume<2&&StatusSrvc.setStatus("Volume low.");var vol="out"==direction?SettingsSrvc.volume/10:0;$scope.swappingTracks=!0,socket.send("swappingTracks",null),wait||deferred.resolve();var cfTimer=$interval(function(){var cfFunc=function(){"out"===direction?(vol-=SettingsSrvc.volume/100,vol>0?player[playerName].setVolume(vol.toFixed(2),playerName):($interval.cancel(cfTimer),cfTimer=void 0,player[playerName].setVolume(0,playerName),pause||player[playerName].stop(playerName),wait&&deferred.resolve())):(vol+=SettingsSrvc.volume/100,vol<SettingsSrvc.volume/10?player[playerName].setVolume(vol.toFixed(2),playerName):($interval.cancel(cfTimer),cfTimer=void 0,player[playerName].setVolume(SettingsSrvc.volume/10,playerName),wait&&deferred.resolve()))};cfFunc()},time);return deferred.promise},addToLastPlayed=function(track){track.time=getTime(),socket.send("lastPlayed",track),$scope.player.lastPlayed.length>25?($scope.player.lastPlayed.splice($scope.player.lastPlayed.length-1,1),$scope.player.lastPlayed.unshift(track)):$scope.player.lastPlayed.unshift(track)},getSecMin=function(s,m){var secmin;return secmin=10>s?m+":0"+s:m+":"+s},getNextPlayerName=function(playerName){return"playerOne"==playerName?"playerTwo":"playerOne"},getTime=function(){return moment().format("HH:mm:ss")},shuffleArray=function(array){for(var t,i,m=array.length;m;)i=Math.floor(Math.random()*m--),t=array[m],array[m]=array[i],array[i]=t;return array};init(),$scope.restart=function(){addToLastPlayed($scope.currentTrack),$interval.cancel(player[$scope.currentTrack.playerName].timer),player[$scope.currentTrack.playerName].timer=void 0,$scope.initialising=!0,crossfade($scope.currentTrack.playerName,SettingsSrvc.crossfadeIn,"out",!0).then(function(){LogSrvc.logSystem("Restarting player"),window.location.reload()})},$scope.playPause=function(){$scope.currentTrack.isPaused?(player[$scope.currentTrack.playerName].play($scope.currentTrack.playerName),crossfade($scope.currentTrack.playerName,50,"in",!0).then(function(){$scope.currentTrack.isPaused=!$scope.currentTrack.isPaused,$scope.swappingTracks=!1,socket.send("ready",null),socket.send("currentTrack",$scope.currentTrack)})):crossfade($scope.currentTrack.playerName,50,"out",!0,!0).then(function(){player[$scope.currentTrack.playerName].pause($scope.currentTrack.playerName),$scope.currentTrack.isPaused=!$scope.currentTrack.isPaused,$scope.swappingTracks=!1,socket.send("ready",null),socket.send("currentTrack",$scope.currentTrack)})},$scope.skipForward=function(){$scope.swappingTracks=!0,$interval.cancel(player[$scope.currentTrack.playerName].timer),player[$scope.currentTrack.playerName].timer=void 0,addToLastPlayed($scope.currentTrack),crossfade($scope.currentTrack.playerName,SettingsSrvc.crossfadeIn,"out",!1).then(function(){prepareNextTrack($scope.currentTrack.playerName)})},$scope.skipBack=function(){$scope.swappingTracks=!0,$interval.cancel(player[$scope.currentTrack.playerName].timer),player[$scope.currentTrack.playerName].timer=void 0,$scope.player.currentIndex=$scope.player.currentIndex-2,addToLastPlayed($scope.currentTrack),crossfade($scope.currentTrack.playerName,SettingsSrvc.crossfadeIn,"out",!1).then(function(){prepareNextTrack($scope.currentTrack.playerName)})},$scope.cancelPushToPlay=function(){$scope.pushToPlay.status=!1,$timeout.cancel(pushToPlayTimer),pushToPlayTimer=void 0,LogSrvc.logSystem("push-to-play timer end")};var unbindVolume=$rootScope.$on("volume-change",function(){changeVolume(SettingsSrvc.volume)});$scope.$on("$destroy",unbindVolume),$scope.openLastTracks=function(element){$scope.lastTracksOpen?$element.removeClass("active-last-played"):$element.addClass("active-last-played"),$scope.lastTracksOpen=!$scope.lastTracksOpen},$scope.openOverlay=function(template){var data;switch(template){case"queue":data=$scope.playlist.tracks}for(var i=$scope.menu.length-1;i>=0;i--)$scope.menu[i].name!=template||$scope.menu[i].active?$scope.menu[i].name==template&&$scope.menu[i].active?($scope.menu[i].active=!1,OverlaySrvc.close()):$scope.menu[i].active=!1:($scope.menu[i].active=!0,OverlaySrvc.open(template,data))};var unbindOpen=$rootScope.$on("open-overlay",function(){$element.addClass("overlay-active")}),unbindClose=$rootScope.$on("close-overlay",function(){$element.removeClass("overlay-active");for(var i=$scope.menu.length-1;i>=0;i--)$scope.menu[i].active=!1});$scope.$on("$destroy",unbindOpen),$scope.$on("$destroy",unbindClose);var unbindPushToPlay=$rootScope.$on("push-to-play",function(){$scope.pushToPlaySchedule.status=!1,$interval.cancel(player[$scope.currentTrack.playerName].timer),player[$scope.currentTrack.playerName].timer=void 0,crossfade($scope.currentTrack.playerName,SettingsSrvc.crossfadeIn,"out",!0).then(function(){$scope.pushToPlay={status:!0,end:getEndTime(SettingsSrvc.pushToPlayTime)},$scope.playlist=angular.copy(PlayerSrvc.playlist),$scope.playlist.end=getEndTime(SettingsSrvc.pushToPlayTime),removeBlockedTracks($scope.playlist),shuffleArray($scope.playlist.tracks),$scope.player.currentIndex=-1,prepareNextTrack($scope.currentTrack.playerName),startPtpTimer()})}),startPtpTimer=function(){var time=36e5*SettingsSrvc.pushToPlayTime,startTimer=function(){$scope.pushToPlay.timer=$timeout(function(){$scope.pushToPlay.status=!1,$timeout.cancel($scope.pushToPlay.timer),$scope.pushToPlay.timer=void 0,LogSrvc.logSystem("push-to-play timer end")},time)};startTimer()};$scope.cancelPushToPlay=function(){$scope.pushToPlay.status=!1,$timeout.cancel($scope.pushToPlay.timer),$scope.pushToPlay.timer=void 0,LogSrvc.logSystem("push-to-play timer end")},$scope.$on("$destroy",unbindPushToPlay);var unbindPtpSchedule=$rootScope.$on("ptp-schedule",function(){$scope.pushToPlay.status&&($scope.pushToPlay.status=!1),$interval.cancel(player[$scope.currentTrack.playerName].timer),player[$scope.currentTrack.playerName].timer=void 0,crossfade($scope.currentTrack.playerName,SettingsSrvc.crossfadeIn,"out",!0).then(function(){var start=new Date;$scope.pushToPlaySchedule={status:!0,playlistIndex:0,schedule:PlayerSrvc.schedule,start:start},$scope.playlist=$scope.pushToPlaySchedule.schedule[$scope.pushToPlaySchedule.playlistIndex],$scope.playlist.playlist_id=$scope.playlist.id,getPlaylistTracks($scope.playlist).then(function(tracks){$scope.playlist.tracks=tracks,shuffleArray($scope.playlist.tracks),$scope.player.currentIndex=-1,prepareNextTrack($scope.currentTrack.playerName),startPtpTimerSchedule()})})}),startPtpTimerSchedule=function(){var arrTimeStart=$scope.playlist.pivot.start.split(":"),arrTimeEnd=$scope.playlist.pivot.end.split(":"),ms=60*arrTimeEnd[0]*6e4+6e4*arrTimeEnd[1]-(60*arrTimeStart[0]*6e4+6e4*arrTimeStart[1]),startTimer=function(){$scope.pushToPlaySchedule.timer=$interval(function(){if(ms>0)ms-=1e3,$scope.playlist.end=msToMinSec(ms);else if($scope.playlist.end="ENDED",$interval.cancel($scope.pushToPlaySchedule.timer),$scope.pushToPlaySchedule.timer=void 0,$scope.swappingTracks){var recheck=$timeout(function(){$scope.swappingTracks?($timeout.cancel(recheck),recheck()):($timeout.cancel(recheck),$scope.skipForward())},11e3);recheck()}else $scope.skipForward()},1e3)};startTimer()};$scope.cancelPushToPlaySchedule=function(){$scope.pushToPlaySchedule.status=!1,$interval.cancel($scope.pushToPlaySchedule.timer),$scope.pushToPlaySchedule.timer=void 0,LogSrvc.logSystem("push-to-play schedule timer end")};var msToMinSec=function(ms){var minutes=Math.floor(ms/6e4),seconds=(ms%6e4/1e3).toFixed(0);return minutes+":"+(10>seconds?"0":"")+seconds};$scope.$on("$destroy",unbindPtpSchedule);var getEndTime=function(hours){return moment().add(hours,"h").format("HH:mm:ss")};$scope.energise=function(){$scope.energy.status=!$scope.energy.status,$scope.energy.status?energisePlaylist():$scope.pushToPlay.status?($scope.player.currentIndex=0,$scope.playlist=angular.copy(PlayerSrvc.playlist),$scope.playlist.end=$scope.pushToPlay.end,removeBlockedTracks($scope.playlist),shuffleArray($scope.playlist.tracks)):preparePlaylist(!0)},$scope.changeEnergy=function(){$timeout(function(){energisePlaylist()},1e3)},$scope.blockTrack=function(track){var c=confirm("Are you sure you want to block this track?");c&&HTTPFactory.blockTrack(track.id).success(function(){track.blocked=!0}).error(function(){var blocked=JSON.parse(localStorage.getItem("blocked"));blocked.push(track.id),localStorage.setItem(blocked)})},$scope.logOff=function(){var c=confirm($scope.lang.menu.conflogout);c&&(player[$scope.currentTrack.playerName].pause($scope.currentTrack.playerName),$http.defaults.headers.common.Authentication="",localStorage.removeItem("Authentication"),localStorage.removeItem("venue"),socket.endConnection(),$location.path("/login"))};var unbindglobalpause=$rootScope.$on("global-pause",function(){player[$scope.currentTrack.playerName].pause($scope.currentTrack.playerName)});$scope.$on("$destroy",unbindglobalpause)}]).directive("ngTouchend",function(){return{controller:function($scope,$element,$attrs){function onTouchEnd(event){var method=$element.attr("ng-touchend");$scope.$event=event,$scope.$apply(method)}$element.bind("touchend",onTouchEnd)}}}).directive("onFinishRender",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attr){scope.$last===!0&&$timeout(function(){scope.$emit("ngRepeatFinished")})}}}]),angular.module("OEPlayer").directive("scheduleBox",["HTTPFactory","$document",function(HTTPFactory,$document){return{restrict:"E",scope:{schedule:"=schedule",dayIndex:"=",index:"=",type:"="},replace:!0,templateUrl:"schedule-box.html",controller:function($scope){$scope.activateBox=function(){var active=angular.element(document.querySelectorAll(".schedule-box.active"));0!==active.length||$scope.active?$scope.active||(active.isolateScope().saveOrCancel(),$scope.saved={},$scope.saved.height=$scope.height,$scope.saved.offset=$scope.offset,$scope.saved.schedule=angular.copy($scope.schedule),$scope.active=!0):($scope.saved={},$scope.saved.height=angular.copy($scope.height),$scope.saved.offset=angular.copy($scope.offset),$scope.saved.schedule=angular.copy($scope.schedule),$scope.active=!0)},$scope.moveMinutes=function(minutes){$scope.schedule.start=new Date($scope.schedule.start.getTime()+6e4*minutes),$scope.schedule.end=new Date($scope.schedule.start.getTime()+12e4*parseInt($scope.height))},$scope.addMinutes=function(minutes){$scope.schedule.end=new Date($scope.schedule.start.getTime()+12e4*parseInt($scope.height))},$scope.checkMidnight=function(){var start=moment($scope.schedule.start),end=moment($scope.schedule.end);end.hours()<=4&&start.hours()<=23&&start.hours()>4?$scope.schedule.midnight_overlap=1:$scope.schedule.midnight_overlap=0},$scope.saveSchedule=function(){$scope.checkMidnight(),"template"==$scope.type?HTTPFactory.updateTemplate($scope.schedule).success(function(data){data.error?alert(data.error):$scope.active=!1}):HTTPFactory.updateCalendar($scope.schedule).success(function(data){data.error?alert(data.error):$scope.active=!1})},$scope.deleteTemplate=function(elem){"template"==$scope.type?HTTPFactory.deleteTemplate($scope.schedule.id).success(function(data){if(data.error)alert(data.error);else{elem.remove();var index=$scope.$parent.schedules[$scope.dayIndex].schedule.indexOf($scope.schedule);$scope.$parent.schedules[$scope.dayIndex].schedule.splice(index,1)}}):HTTPFactory.deleteCalendar($scope.schedule.id).success(function(data){if(data.error)alert(data.error);else{elem.remove();var index=$scope.$parent.schedules[$scope.dayIndex].schedule.indexOf($scope.schedule);$scope.$parent.schedules[$scope.dayIndex].schedule.splice(index,1)}})},$scope.saveOrCancel=function(){if($scope.height==$scope.saved.height&&$scope.offset==$scope.saved.offset)$scope.active=!1;else{var r=confirm("Do you want to save or cancel current editing?");r?($scope.schedule.day=$scope.dayIndex,$scope.saveSchedule(),$scope.active=!1):($scope.height=$scope.saved.height,$scope.offset=$scope.saved.offset,$scope.schedule=$scope.saved.schedule,$scope.active=!1)}}},link:function(scope,elem,attrs){6==scope.dayIndex&&elem.addClass("controls-left");var diff=scope.schedule.end-scope.schedule.start,oneHour=36e5,diffHours=diff/oneHour;if(1==scope.schedule.midnight_overlap){var toMidnight=24-scope.schedule.start.getHours();scope.height=(60*(toMidnight+parseInt(scope.schedule.end.getHours()))+parseInt(scope.schedule.end.getMinutes()))/2}else scope.height=30*diffHours.toFixed(2),scope.height+=1;scope.offset=(60*parseInt(scope.schedule.start.getHours())+parseInt(scope.schedule.start.getMinutes()))/2,scope.schedule.start.getHours()>=0&&scope.schedule.start.getHours()<4&&(scope.offset+=600,scope.offset+=120),scope.offset=scope.offset-120,scope.duration=scope.height/30,scope.moveUp=function(event){event.stopPropagation(),scope.offset>0&&(scope.offset-=15,scope.moveMinutes(-30))},scope.moveDown=function(event){event.stopPropagation(),scope.height+scope.offset<720&&(scope.offset+=15,scope.moveMinutes(30))},scope["delete"]=function(event){event.stopPropagation(),scope.deleteTemplate(elem)},scope.cancel=function(event){event.stopPropagation(),scope.height=scope.saved.height,scope.offset=scope.saved.offset,scope.schedule=scope.saved.schedule,scope.active=!1},scope.save=function(event){event.stopPropagation(),scope.schedule.day=scope.dayIndex,scope.saveSchedule()},scope.increaseLength=function(event){event.stopPropagation(),scope.height+scope.offset<720&&(scope.height+=15,scope.duration+=.5,scope.addMinutes(30))},scope.decreaseLength=function(event){event.stopPropagation(),scope.height>15&&(scope.height-=15,scope.duration-=.5,scope.addMinutes(-30))}}}}]).directive("scheduleBoxInactive",[function(){return{restrict:"E",scope:{schedule:"=schedule",dayIndex:"=",index:"="},replace:!0,templateUrl:"schedule-box-inactive.html",link:function(scope,elem,attrs){var diff=scope.schedule.end-scope.schedule.start,oneHour=36e5,diffHours=diff/oneHour;if(1==scope.schedule.midnight_overlap){var toMidnight=24-scope.schedule.start.getHours();scope.height=(60*(toMidnight+parseInt(scope.schedule.end.getHours()))+parseInt(scope.schedule.end.getMinutes()))/2}else scope.height=30*diffHours.toFixed(2),scope.height+=1;scope.offset=(60*parseInt(scope.schedule.start.getHours())+parseInt(scope.schedule.start.getMinutes()))/2,scope.schedule.start.getHours()>=0&&scope.schedule.start.getHours()<4&&(scope.offset+=600,scope.offset+=120),scope.offset=scope.offset-120,scope.duration=scope.height/30}}}]).filter("makeTime",[function(){return function(item){return item+".00"}}]),angular.module("OEPlayer").factory("FileFactory",["FileSystem","$q",function(FileSystem,$q){var seq=[165,150,151,86],swapIn=function(abv){var data=abv;if(!checkSequence(abv)){data=swap(abv);for(var seqData=[],i=0;i<data.length;i++)seqData[i]=data[i];for(var j=0;j<seq.length;j++)seqData[data.length+j]=seq[j];data=new Uint8Array(seqData)}return data},swapOut=function(abv,dir,filename){var data=abv;if(checkSequence(abv)){for(var noSeqData=[],i=0;i<data.length-4;i++)noSeqData[i]=data[i];data=new Uint8Array(noSeqData),data=swap(data)}else FileSystem.readAsArrayBuffer(dir,filename.toString()).then(function(result){var abv=new Uint8Array(result);abv=swapIn(abv);var blob=new Blob([abv],{type:"audio/mpeg"});FileSystem.writeFile(dir,filename.toString(),blob,!0).then(function(result){console.log("encrypted")},function(error){console.log(error)})},function(error){console.log(error)});return data},swap=function(abv){for(var i=0;i<abv.length&&!(i+1>abv.length);i+=2){var temp=abv[i];abv[i]=abv[i+1],abv[i+1]=temp}return abv},checkSequence=function(abv){for(var i=0;i<seq.length;i++)if(abv[abv.length-4+i]!=seq[i])return!1;return!0};return{init:function(){var deferred=$q.defer();return FileSystem.init().then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),deferred.promise},getAvailableSpace:function(){var deferred=$q.defer();return FileSystem.getAvailableSpace().then(function(used,left){deferred.resolve(used,left)},function(error){deferred.reject(error)}),deferred.promise},writeTrack:function(dir,filename,data,blnReplace){var deferred=$q.defer(),abv=new Uint8Array(data);abv=swapIn(abv);var blob=new Blob([abv],{type:"audio/mpeg"});return FileSystem.writeFile(dir,filename.toString(),blob,blnReplace).then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),deferred.promise},writeJSON:function(dir,filename,data,blnReplace){var deferred=$q.defer(),json=JSON.stringify(data),blob=new Blob([json],{type:"text/plain"});return FileSystem.writeFile(dir,filename.toString(),blob,blnReplace).then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),deferred.promise},readJSON:function(dir,filename){var deferred=$q.defer();return FileSystem.readAsText(dir,filename).then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),deferred.promise},checkFile:function(dir,filename){var deferred=$q.defer();return FileSystem.checkFile(dir,filename.toString()).then(function(result){deferred.resolve(result)},function(error){deferred.reject(error)}),deferred.promise},readTrack:function(dir,filename){var deferred=$q.defer();return FileSystem.readAsArrayBuffer(dir,filename.toString()).then(function(result){var abv=new Uint8Array(result);abv=swapOut(abv,dir,filename);var blob=new Blob([abv],{type:"audio/mpeg"});deferred.resolve(blob)},function(error){deferred.reject(error)}),deferred.promise},readDirectory:function(dir){var deferred=$q.defer();return FileSystem.readDirectory(dir).then(function(results){deferred.resolve(results)},function(error){deferred.reject(error)}),deferred.promise},deleteFile:function(path,file){var deferred=$q.defer();return FileSystem.deleteFile(path,file).then(function(results){deferred.resolve(results)},function(error){deferred.reject(error)}),deferred.promise},getMetadata:function(path,file){var deferred=$q.defer();return FileSystem.getMetadata(path,file).then(function(results){deferred.resolve(results)},function(error){deferred.reject(error)}),deferred.promise}}}]),angular.module("OEPlayer").factory("HTTPFactory",["$http","config","$q","SettingsSrvc",function($http,config,$q,SettingsSrvc){return{login:function(data){return $http.post(config.api_url+"login",data)},loginHash:function(data){return $http.post(config.api_url+"login-hash",data)},getPlaylists:function(){return $http.get(config.api_url+"playlists")},getTracks:function(){return $http.get(config.api_url+"tracks")},getSchedule:function(){return $http.get(config.api_url+"schedule")},getScheduleTime:function(){return $http.get(config.api_url+"schedule-time")},logTrack:function(logs){return $http.post(config.log_path,logs)},blockTrack:function(id){return $http.put(config.api_url+"block-track/"+id)},getBlocked:function(){return $http.get(config.api_url+"blocked-tracks")},getTrackSrc:function(id){return $http.get(config.api_url+"track/"+id)},getTrackSrcSmall:function(id){return $http.get(config.api_url+"track-small/"+id)},getTrackFile:function(src){return $http({type:"GET",url:src,responseType:"arraybuffer",headers:{Authentication:void 0}})},getScheduleTemplate:function(){return $http.get(config.api_url+"schedule-template")},getVenueCalendar:function(date){return $http.get(config.api_url+"schedule-calendar/"+date)},checkOnline:function(){return $http.head(config.api_url+"playlists")},reprocessFile:function(track){return $http.post(config.api_url+"reprocess-file",track)},sendError:function(data){return $http.post(config.api_url+"send-error",{error:data})},getSettings:function(){return $http.get(config.api_url+"settings")},setSettings:function(data){return $http.post(config.api_url+"set-settings",data)}}}]).factory("HttpErrorInterceptorModule",["$q","$location","$rootScope",function($q,$location,$rootScope){return{responseError:function(rejection){return 401===rejection.status&&(localStorage.removeItem("Authentication"),localStorage.removeItem("venue"),localStorage.removeItem("loginHash"),window.location.reload()),$q.reject(rejection)}}}]),angular.module("OEPlayer").factory("LangFactory",["SettingsSrvc",function(SettingsSrvc){var dictionary={English:{menu:{playlists:"push to play",queue:"queue",schedule:"schedule",settings:"settings",restart:"restart",logout:"logout",conflogout:"Are you sure you want to logoff?"},player:{online:"online",offline:"offline",lastplayed:{title:"Last Played",table:{title:"Title",album:"Album",artist:"Artist",block:"Block",played:"Played at"}}},playlists:{title:"Push to Play",sub:{ptp:"Playlists",time:"Time Based"},table:{title:"Title",album:"Album",artist:"Artist",block:"Block"}},queue:{title:"Queue",table:{title:"Title",album:"Album",artist:"Artist",block:"Block",energy:"Energy"}},schedule:{title:"Schedule",sub:{template:"Week Template",cal:"Calendar"},days:{mon:"Monday",tues:"Tuesday",wed:"Wednesday",thurs:"Thursday",fri:"Friday",sat:"Saturday",sun:"Sunday"}},settings:{title:"Settings",language:"Language",fadein:"Fade time (seconds)",fadeout:"Fade out time (seconds)",skip:"Skip fade out time (seconds)",online:"Online check type",animations:"Animations",pushtoplay:"Push to play time (hours)",energy:"Energy slider minimum playlist length",delstored:"Delete Stored Data",dellib:"Delete Library",conflibdel:"Are you sure you want to delete the library?",confstored:"Are you sure you want to delete stored data?",changeLang:"Changing language will require a restart. Are you sure?",restart:"24hr restart time"}},Portuguese:{menu:{playlists:"playlists",queue:"fila",schedule:"cronograma",settings:"configurações",restart:"reiniciar",logout:"sair",conflogout:"Tem certeza de que quer sair do site ?"},player:{online:"conectados",offline:"off-line",lastplayed:{title:"Tocada por último",table:{title:"Título",album:"Álbum",artist:"Artista",block:"Bloquear",played:"Tocado em"}}},playlists:{title:"Playlists",table:{title:"Título",album:"Álbum",artist:"Artista",block:"Bloquear"}},queue:{title:"Fila",table:{title:"Título",album:"Álbum",artist:"Artista",block:"Bloquear",energy:"Energia"}},schedule:{title:"Cronograma",sub:{template:"Modelo Semanal",cal:"Calendário"},days:{mon:"Segunda",tues:"Terça",wed:"Quarta",thurs:"Quinta",fri:"Sexta",sat:"Sabádo",sun:"Domingo"}},settings:{title:"Configurações",language:"Idioma",fadein:"Fade in (segundos)",fadeout:"Fade out (segundos)",skip:"Skip fade out tempo (segundos)",online:"Tipo de verificação on-line",animations:"Animações",pushtoplay:"Começa a tocar as (horas)",energy:"Tamanho mínimo da playlists do Slider de Energia",delstored:"Excluir os dados armazenados",dellib:"excluir Biblioteca",conflibdel:"Tem certeza de que deseja excluir a biblioteca ?",confstored:"Tem certeza de que quer apagar os dados armazenados ?",changeLang:"Changing language will require a restart. Are you sure?",restart:"24hr restart time"}},Spanish:{menu:{playlists:"listas de reproducción",queue:"en espera",schedule:"horario",settings:"preferencias",restart:"reiniciar",logout:"cerrar sesión",conflogout:"¿Está seguro desea cerrar su sesión?"},player:{online:"en línea",offline:"sin conexión",lastplayed:{title:"Ultima Reproducción",table:{title:"Título",album:"Album",artist:"Artista",block:"Bloquear",played:"Reproducida a las"}}},playlists:{title:"Listas de reproducción",table:{title:"Título",album:"Album",artist:"Artista",block:"Bloquear"}},queue:{title:"En espera",table:{title:"Título",album:"Album",artist:"Artista",block:"Bloquear",energy:"Energía"}},schedule:{title:"Horario",sub:{template:"Plantilla Semanal",cal:"Calendario"},days:{mon:"Lunes",tues:"Martes",wed:"Miércoles",thurs:"Jueves",fri:"Viernes",sat:"Sábado",sun:"Domingo"}},settings:{title:"Preferencias",language:"Idioma",fadein:"Tiempo de inicio gradual (segundos)",fadeout:"Tiempo de terminación gradual (segundos)",skip:"Saltar tiempo de terminación gradual (segundos)",online:"Checar tipo en línea",animations:"Animaciones",pushtoplay:"Oprimir para tiempo de reproducción (horas)",energy:"Energy slider minimum playlist length",delstored:"Borrar Datos Almacenados",dellib:"Borrar Biblioteca",conflibdel:"¿Está usted seguro que desea borrar la biblioteca?",confstored:"¿Está usted seguro que desea borrar los datos almacenados?",changeLang:"Cambiar idioma requerirá reinicio. ¿Está seguro?",restart:"24hr restart time"}}};return dictionary[SettingsSrvc.lang]}]),angular.module("OEPlayer").factory("MediaFactory",["$document","$rootScope","PlayerSrvc","$interval","$q","FileFactory","config","LogSrvc","SettingsSrvc",function($document,$rootScope,PlayerSrvc,$interval,$q,FileFactory,config,LogSrvc,SettingsSrvc){
var self=this,MediaFactory=function(playerName){self.playerName=playerName};return MediaFactory.prototype={init:function(src){var deferred=$q.defer();return FileFactory.readTrack(config.local_path,src).then(function(track){self[self.playerName]={},self[self.playerName].createdMedia=$document[0].createElement("audio"),self[self.playerName].createdMedia.src=URL.createObjectURL(track),self[self.playerName].createdMedia.setSinkId(SettingsSrvc.outputDevice).then(function(){deferred.resolve()})["catch"](function(){deferred.resolve()})},function(error){deferred.reject(error),LogSrvc.logError(error)}),deferred.promise},play:function(){self[self.playerName].createdMedia.play()},isPlaying:function(playerName){return!self[self.playerName].createdMedia.paused},setVolume:function(vol,playerName){self[playerName].createdMedia.volume=vol},getCurrentPosition:function(playerName){return self[playerName].createdMedia.currentTime},pause:function(playerName){self[playerName].createdMedia.pause()},getDuration:function(playerName){return self[playerName].createdMedia.duration},stop:function(playerName){"undefined"!=typeof self[playerName]&&(URL.revokeObjectURL(self[playerName].createdMedia.src),self[playerName].createdMedia.src="")}},MediaFactory}]),angular.module("OEPlayer").factory("SocketFactory",["$rootScope","$interval","LogSrvc",function($rootScope,$interval,LogSrvc){var self=this,SocketFactory=function(url){self.socket=new WebSocket(url),self.socket.onopen=angular.bind(this,this.open),self.socket.onclose=angular.bind(this,this.close),self.socket.onmessage=angular.bind(this,this.receive),self.socket.onerror=angular.bind(this,this.error),self.ready=!1};return SocketFactory.prototype={open:function(){self.ready=!0;var data={token:localStorage.getItem("Authentication"),event:"ping"};$interval(function(){var pingStart=function(){self.socket.send(JSON.stringify(data))};pingStart()},1e4);$rootScope.$broadcast("socket:open")},close:function(){$rootScope.$broadcast("socket:closed")},receive:function(data){$rootScope.$broadcast("socket:message",JSON.parse(data.data))},send:function(event,dt){if(self.ready){var data={token:localStorage.getItem("Authentication"),event:event,data:dt};self.socket.send(JSON.stringify(data))}},error:function(err){LogSrvc.logError(err)},endConnection:function(){self.socket.close()}},SocketFactory}]).service("guid",function(){var guid=function(){function s4(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return s4()+s4()+"-"+s4()+"-"+s4()+"-"+s4()+"-"+s4()+s4()+s4()}}();return guid}),document.addEventListener("DOMContentLoaded",function(){var el=document.querySelector("html");angular.bootstrap(el,["OEPlayer"])},!1),angular.module("OEPlayer").constant("cordovaFileError",{1:"NOT_FOUND_ERR",2:"SECURITY_ERR",3:"ABORT_ERR",4:"NOT_READABLE_ERR",5:"ENCODING_ERR",6:"NO_MODIFICATION_ALLOWED_ERR",7:"INVALID_STATE_ERR",8:"SYNTAX_ERR",9:"INVALID_MODIFICATION_ERR",10:"QUOTA_EXCEEDED_ERR",11:"TYPE_MISMATCH_ERR",12:"PATH_EXISTS_ERR"}).factory("FileSystem",["LogSrvc","$q","$window","config","cordovaFileError",function(LogSrvc,$q,$window,config,cordovaFileError){var oefs={fs:{},c:0};return{init:function(){LogSrvc.logSystem("Starting file system");var q=$q.defer();return navigator.webkitPersistentStorage.requestQuota(10737418240,function(grantedBytes){this.availableSpace=grantedBytes,window.webkitRequestFileSystem(window.PERSISTENT,grantedBytes,function(fs){oefs.fs=fs,q.resolve("File system ready")},function(error){LogSrvc.logError(error),q.reject(error)})},function(error){LogSrvc.logError(error),q.reject(error)}),q.promise},getAvailableSpace:function(){var q=$q.defer();return navigator.webkitPersistentStorage.queryUsageAndQuota(function(used,quota){var res=[used,quota];q.resolve(res)},function(err){q.reject(err)}),q.promise},checkDir:function(path,dir){oefs.c++;var q=$q.defer();/^\//.test(dir)&&q.reject("directory cannot start with /");try{var directory=path+dir;$window.resolveLocalFileSystemURL(directory,function(fileSystem){oefs.fs.root.isDirectory===!0?q.resolve(fileSystem):q.reject({code:13,message:"input is not a directory"})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(err){err.message=cordovaFileError[err.code],q.reject(err)}return q.promise},checkFile:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("directory cannot start with /");try{var directory=path+file;oefs.fs.root.getFile(directory,{create:!1},function(){q.resolve(!0)},function(){q.reject(!1)})}catch(err){err.message=cordovaFileError[err.code],q.reject(err)}return q.promise},createDir:function(path,dirName,replaceBool){oefs.c++;var q=$q.defer();/^\//.test(dirName)&&q.reject("directory cannot start with /"),replaceBool=replaceBool?!1:!0;var options={create:!0,exclusive:replaceBool};try{oefs.fs.root.getDirectory(dirName,options,function(result){q.resolve(result)},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},createFile:function(path,fileName,replaceBool){oefs.c++;var q=$q.defer();/^\//.test(fileName)&&q.reject("file-name cannot start with /"),replaceBool=replaceBool?!1:!0;var options={create:!0,exclusive:replaceBool};try{oefs.fs.root.getFile(fileName,options,function(result){q.resolve(result)},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},removeDir:function(path,dirName){oefs.c++;var q=$q.defer();/^\//.test(dirName)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getDirectory(dirName,{create:!1},function(dirEntry){dirEntry.remove(function(){q.resolve({success:!0,fileRemoved:dirEntry})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})},function(err){err.message=cordovaFileError[err.code],q.reject(err)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},removeFile:function(path,fileName){oefs.c++;var q=$q.defer();/^\//.test(fileName)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(fileName,{create:!1},function(fileEntry){fileEntry.remove(function(){q.resolve({success:!0,fileRemoved:fileEntry})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})},function(err){err.message=cordovaFileError[err.code],q.reject(err)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},removeRecursively:function(path,dirName){oefs.c++;var q=$q.defer();/^\//.test(dirName)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getDirectory(dirName,{create:!1},function(dirEntry){dirEntry.removeRecursively(function(){q.resolve({success:!0,fileRemoved:dirEntry})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})},function(err){err.message=cordovaFileError[err.code],q.reject(err)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},writeFile:function(path,fileName,text,replaceBool){oefs.c++;var q=$q.defer();/^\//.test(fileName)&&q.reject("file-name cannot start with /"),replaceBool=replaceBool?!1:!0;var options={create:!0,exclusive:replaceBool};try{oefs.fs.root.getFile(fileName,options,function(fileEntry){fileEntry.createWriter(function(writer){options.append===!0&&writer.seek(writer.length),options.truncate&&writer.truncate(options.truncate),writer.onwriteend=function(evt){this.error?(q.reject(this.error),LogSrvc.logError(this.error)):q.resolve(evt)},writer.write(text),q.promise.abort=function(){writer.abort()}})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},writeExistingFile:function(path,fileName,text){oefs.c++;var q=$q.defer();/^\//.test(fileName)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(fileName,{create:!1},function(fileEntry){fileEntry.createWriter(function(writer){writer.seek(writer.length),writer.onwriteend=function(evt){this.error?q.reject(this.error):q.resolve(evt)},writer.write(text),q.promise.abort=function(){writer.abort()}})},function(err){err.message=cordovaFileError[err.code],q.reject(err)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},readAsText:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(file,{create:!1},function(fileEntry){fileEntry.file(function(fileData){var reader=new FileReader;reader.onloadend=function(evt){void 0!==evt.target.result||null!==evt.target.result?q.resolve(evt.target.result):void 0!==evt.target.error||null!==evt.target.error?q.reject(evt.target.error):q.reject({code:null,message:"READER_ONLOADEND_ERR"})},reader.readAsText(fileData)})},function(error){LogSrvc.logError(error.message),q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},readAsDataURL:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(file,{create:!1},function(fileEntry){fileEntry.file(function(fileData){var reader=new FileReader;reader.onloadend=function(evt){void 0!==evt.target.result||null!==evt.target.result?q.resolve(evt.target.result):void 0!==evt.target.error||null!==evt.target.error?q.reject(evt.target.error):q.reject({code:null,message:"READER_ONLOADEND_ERR"})},reader.readAsDataURL(fileData)})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},readAsBinaryString:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(file,{create:!1},function(fileEntry){fileEntry.file(function(fileData){var reader=new FileReader;reader.onloadend=function(evt){void 0!==evt.target.result||null!==evt.target.result?q.resolve(evt.target.result):void 0!==evt.target.error||null!==evt.target.error?q.reject(evt.target.error):q.reject({code:null,message:"READER_ONLOADEND_ERR"})},reader.readAsBinaryString(fileData)})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},readAsArrayBuffer:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(file,{create:!1},function(fileEntry){fileEntry.file(function(fileData){var reader=new FileReader;reader.onloadend=function(evt){void 0!==evt.target.result||null!==evt.target.result?q.resolve(evt.target.result):void 0!==evt.target.error||null!==evt.target.error?q.reject(evt.target.error):q.reject({code:null,message:"READER_ONLOADEND_ERR"})},reader.readAsArrayBuffer(fileData)})},function(error){error.message=cordovaFileError[error.code],q.reject(error)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},moveFile:function(path,fileName,newPath,newFileName){oefs.c++;var q=$q.defer();newFileName=newFileName||fileName,(/^\//.test(fileName)||/^\//.test(newFileName))&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(fileName,{create:!1},function(fileEntry){$window.resolveLocalFileSystemURL(newPath,function(newFileEntry){fileEntry.moveTo(newFileEntry,newFileName,function(result){q.resolve(result)},function(error){q.reject(error)})},function(err){q.reject(err)})},function(err){q.reject(err)})}catch(e){q.reject(e)}return q.promise},moveDir:function(path,dirName,newPath,newDirName){oefs.c++;var q=$q.defer();newDirName=newDirName||dirName,(/^\//.test(dirName)||/^\//.test(newDirName))&&q.reject("file-name cannot start with /");try{$window.resolveLocalFileSystemURL(path,function(fileSystem){oefs.fs.root.getDirectory(dirName,{create:!1},function(dirEntry){$window.resolveLocalFileSystemURL(newPath,function(newDirEntry){dirEntry.moveTo(newDirEntry,newDirName,function(result){q.resolve(result)},function(error){q.reject(error)})},function(erro){q.reject(erro)})},function(err){q.reject(err)})},function(er){q.reject(er)})}catch(e){q.reject(e)}return q.promise},copyDir:function(path,dirName,newPath,newDirName){oefs.c++;var q=$q.defer();newDirName=newDirName||dirName,(/^\//.test(dirName)||/^\//.test(newDirName))&&q.reject("file-name cannot start with /");try{$window.resolveLocalFileSystemURL(path,function(fileSystem){oefs.fs.root.getDirectory(dirName,{create:!1,exclusive:!1},function(dirEntry){$window.resolveLocalFileSystemURL(newPath,function(newDirEntry){dirEntry.copyTo(newDirEntry,newDirName,function(result){q.resolve(result)},function(error){error.message=cordovaFileError[error.code],q.reject(error)})},function(erro){erro.message=cordovaFileError[erro.code],q.reject(erro)})},function(err){err.message=cordovaFileError[err.code],q.reject(err)})},function(er){er.message=cordovaFileError[er.code],q.reject(er)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},copyFile:function(path,fileName,newPath,newFileName){oefs.c++;var q=$q.defer();newFileName=newFileName||fileName,/^\//.test(fileName)&&q.reject("file-name cannot start with /");try{$window.resolveLocalFileSystemURL(path,function(fileSystem){oefs.fs.root.getFile(fileName,{create:!1,exclusive:!1},function(fileEntry){$window.resolveLocalFileSystemURL(newPath,function(newFileEntry){fileEntry.copyTo(newFileEntry,newFileName,function(result){q.resolve(result)},function(error){error.message=cordovaFileError[error.code],q.reject(error)})},function(erro){erro.message=cordovaFileError[erro.code],q.reject(erro)})},function(err){err.message=cordovaFileError[err.code],q.reject(err)})},function(er){er.message=cordovaFileError[er.code],q.reject(er)})}catch(e){e.message=cordovaFileError[e.code],q.reject(e)}return q.promise},readDirectory:function(path){oefs.c++;var q=$q.defer();try{oefs.fs.root.getDirectory("/",{create:!1,exclusive:!1},function(dirEntry){var dirReader=dirEntry.createReader(),entries=[],readEntries=function(){dirReader.readEntries(function(results){results.length?(entries=entries.concat(Array.prototype.slice.call(results||[],0)),readEntries()):q.resolve(entries)},function(error){q.reject(cordovaFileError[error.code])})};readEntries()},function(error){q.reject(cordovaFileError[error.code])})}catch(e){q.reject(cordovaFileError[e.code])}return q.promise},deleteFile:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(file,{create:!1},function(fileEntry){fileEntry.remove(function(){LogSrvc.logSystem("file "+file+" deleted"),q.resolve("file "+file+" deleted")})})}catch(e){q.reject(cordovaFileError[e.code])}return q.promise},getMetadata:function(path,file){oefs.c++;var q=$q.defer();/^\//.test(file)&&q.reject("file-name cannot start with /");try{oefs.fs.root.getFile(file,{},function(fileEntry){fileEntry.getMetadata(function(metadata){q.resolve(metadata)})})}catch(e){q.reject(cordovaFileError[e.code])}return q.promise}}}]),angular.module("OEPlayer").service("LogSrvc",["HTTPFactory",function(HTTPFactory){var d,LogSrvc={};return LogSrvc.logSystem=function(log){d=new Date,log="[SYSTEM] "+log+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds(),console.log(log)},LogSrvc.logError=function(log){d=new Date;var err=new Error;log="[ERROR] "+log+" "+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()+err.stack,console.log(log)},LogSrvc}]),angular.module("OEPlayer").service("OverlaySrvc",["$rootScope",function($rootScope){var OverlaySrvc=this;OverlaySrvc.open=function(type,data){OverlaySrvc.type=type,OverlaySrvc.data=data,$rootScope.$emit("open-overlay")},OverlaySrvc.close=function(){$rootScope.$emit("close-overlay")}}]),angular.module("OEPlayer").service("PlayerSrvc",["$rootScope",function($rootScope){var PlayerSrvc={};return PlayerSrvc.updateTime=function(time){PlayerSrvc.timer=time,$rootScope.$broadcast("timeupdate")},PlayerSrvc.pushToPlay=function(playlist){PlayerSrvc.playlist=playlist,$rootScope.$broadcast("push-to-play")},PlayerSrvc.ptpSchedule=function(schedule){PlayerSrvc.schedule=schedule,$rootScope.$broadcast("ptp-schedule")},PlayerSrvc}]),angular.module("OEPlayer").service("SettingsSrvc",["$rootScope",function($rootScope){return SettingsSrvc={crossfadeIn:parseInt(localStorage.getItem("crossfadeIn"))||500,crossfadeOut:parseInt(localStorage.getItem("crossfadeOut"))||500,skipCrossfadeOut:parseInt(localStorage.getItem("skipCrossfadeOut"))||500,onlineCheck:parseInt(localStorage.getItem("onlineCheck"))||1,animations:localStorage.getItem("animations")||2,pushToPlayTime:parseInt(localStorage.getItem("pushToPlayTime"))||1,minEnergyPlaylist:parseInt(localStorage.getItem("minEnergyPlaylist"))||50,lang:localStorage.getItem("languages")||"English",restartTime:parseFloat(localStorage.getItem("restartTime"))||4,fileSize:parseFloat(localStorage.getItem("fileSize"))||2,errors:parseFloat(localStorage.getItem("errors"))||1,volume:parseInt(localStorage.getItem("volume"))||10,outputDevice:localStorage.getItem("outputDevice")||"default"},SettingsSrvc.setSetting=function(setting,value){SettingsSrvc[setting]=value,localStorage.setItem(setting,value)},SettingsSrvc}]),angular.module("OEPlayer").service("StatusSrvc",[function(){var StatusSrvc={};return StatusSrvc.setStatus=function(status){StatusSrvc.status=status},StatusSrvc.clearStatus=function(){StatusSrvc.status=""},StatusSrvc}]);